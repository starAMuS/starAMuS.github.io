name: Build and Deploy AMuS Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt found"
      
      - name: Cache processed data
        uses: actions/cache@v3
        with:
          path: _data
          key: ${{ runner.os }}-data-${{ hashFiles('data/famus/*.jsonl', 'data/seamus/*.json', 'data/ontology.json') }}
          restore-keys: |
            ${{ runner.os }}-data-
      
      - name: Process datasets
        run: |
          # Create data directories
          mkdir -p _data/{famus,seamus,ontology}
          
          # Process ontology data
          if [ -f "data/ontology.json" ]; then
            echo "Processing ontology data..."
            python scripts/process_ontology.py \
              --input-file data/ontology.json \
              --output-dir _data/ontology
          fi
          
          # Process FAMuS data
          if [ -d "data/famus" ]; then
            echo "Processing FAMuS data..."
            python scripts/process_famus.py \
              --input-dir data/famus \
              --output-dir _data/famus \
              --ontology-dir _data/ontology
          fi
          
          # Process SEAMuS data
          if [ -d "data/seamus" ]; then
            echo "Processing SEAMuS data..."
            python scripts/process_seamus.py \
              --input-dir data/seamus \
              --output-dir _data/seamus \
              --ontology-dir _data/ontology \
              --famus-dir _data/famus
          fi
          
          # Extract URLs from MegaWika
          echo "Extracting URLs..."
          python scripts/extract_urls.py \
            --famus-dir _data/famus \
            --output-file _data/urls.json \
            --limit 10000
      
      - name: Build Jekyll site
        env:
          JEKYLL_ENV: production
        run: |
          bundle exec jekyll build --trace
      
      - name: Optimize assets
        run: |
          # Install optimization tools
          npm install -g terser cssnano-cli
          
          # Minify JavaScript
          find _site/assets/js -name "*.js" -type f -exec terser {} -o {} -c -m \;
          
          # Minify CSS
          find _site/assets/css -name "*.css" -type f -exec cssnano {} {} \;
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4